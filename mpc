   test_case = 4;
sto_margin = 0.4;
H = 24;

% Vettore dati storici bload di 1 settimana ( sono dei valori medi )
bloadstoric =[0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
    0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
    0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
    0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
    0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
    0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4...
0.6 0.6 0.4 0.4 0.4 0.4 0.8 1.0 0.8 0.7 1.0 1.5  2.2 1.9 1.8 1.6 1.6 0.5 0.5 0.7 1.0 0.8 0.4 0.4]
% Vettore dati previsti res di 1 settimana (sono dei valori medi)
resprevis = 1.2*[ 0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0...
    0.0 0.0 0.0 0.0 0.1 0.3 0.7 1.1 1.5 2.0 1.4 0.7 0.3 0.1 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0]
% Objective
nC = H; %Number of Continuous Variables
nI = 10; %Number of Integer Variables
nB = H; %Number of Binary Variables

% Build xtype vector
xtype = [repmat('C',1,4*nC),repmat('B',1,2*nB)]
% Cost coefficients (assunti costanti per tutti i giorni) 
switch test_case
    case 1
        k = ones(7*H,1)*0.045;
    otherwise 
        k = ones(7*H,1)*0.045;
        k(7:19) = 0.070 ;
        k(7+H:19+H) = 0.070;
        k(7+2*H:19+2*H) = 0.070;
        k(7+3*H:19+3*H) = 0.070;
        k(7+4*H:19+4*H) = 0.070;
        k(7+5*H:19+5*H) = 0.070;
        k(7+6*H:19+6*H) = 0.070;
        
end
       

% controllable loads parameters
xmin = 0.5  *ones(H,1); % minimum required energy per slot
xmax = 2 *ones(H,1); % maximum required energy per slot
Xtot = 25; % maximum required energy per slot
%secondo carico controllabile
xmin1 = 0.2*ones(H,1);
xmax1 = 2.6*ones(H,1);
% storage parameters
% maximum charging energy per slot
switch test_case
    case {1,2,3}
        sp_max = 0;
    otherwise
        sp_max = 1; 
end
sm_max = sp_max; % maximum discharging energy per slot
Smax = 30; % maximum state of charge
S0 = 0; % initial state of charge
etap=1; % charging efficiency 
etam=1; % discharging efficiency 
%inizializzazione variabili
x=zeros(H,1);
x1= zeros(H,1);
z= zeros(H,1);
% receding horizon 
for j=0:143
    kp = k(j+1:j+H); 
    bload =[bloadstoric(j+1:j+H)]  
for d=1:24
    bb(d)= randn(1,1)*0.1+bload(d)
end

 
% RES production profile
switch test_case
    case {1,2}
        res = zeros(7*H,1);
    otherwise
        res =[resprevis(j+1:j+H)]
        for c=1:24
        r(c) = randn(1,1)*0.1+res(c)
        end
      
end



   
K = diag(kp);
I_4H = repmat(eye(H),1,4);


Q1 = 2*I_4H'*K*I_4H;
Q = [Q1, zeros(4*H,2*H);zeros(2*H,6*H)];
d_C = [bb'-r'; zeros(5*H,1)];
f=d_C'*Q;

% equality constraints
%primo carico controllabile
Aeq_x = [ ones(1,H) zeros(1,5*H) ];
beq_x = Xtot;
%secondo carico controllabile
Aeq_x1 = [ zeros(1,H) ones(1,H) zeros(1,4*H) ];
beq_x1 = Xtot;
% 1 equality constraints -> initial==final storage level
Aeq_z = [ zeros(1,2*H) etap*ones(1,H) +(1/etam)*ones(1,H) zeros(1,2*H) ];
beq_z = S0;

Aeq = [ Aeq_x; Aeq_x1 ; Aeq_z ];
beq = [ beq_x; beq_x1 ; beq_z ];
% 2*H inequality constraints -> storage
A_1 = [zeros(H,2*H),etap*eye(H),-(1/etam)*eye(H),zeros(H,2*H)];  
b_1 = (Smax-S0)*ones(H,1);

A_2 = [zeros(H,2*H),-etap*eye(H),(1/etam)*eye(H),zeros(H,2*H)];
b_2 = S0*ones(H,1);

% inequality constraints z_p-delta_p*sp_max <= 0 & -z_p+delta_p*sp_max <= 0
A_zp1 = [zeros(H,2*H), eye(H), zeros(H), -sp_max*eye(H), zeros(H)];
b_zp1 = zeros(H,1);
A_zp2 = [zeros(H,2*H), -eye(H), zeros(H), sp_max*eye(H), zeros(H)];
b_zp2 = zeros(H,1);
% inequality constraints z_m-delta_m*sm_max <= 0 & -z_m+delta_m*sm_max <= 0
A_zm1 = [zeros(H,3*H), eye(H), zeros(H), sm_max*eye(H)];
b_zm1 = zeros(H,1);
A_zm2 = [zeros(H,3*H), -eye(H), zeros(H), -sm_max*eye(H)];
b_zm2 = zeros(H,1);
% inequality constraint delta_p+delta_m <= 0
A_delta = [zeros(H,4*H) eye(H) eye(H)];
b_delta = ones(H,1);
% A and b

A = [ A_1; A_2; A_zp1; A_zp2; A_zm1; A_zm2; A_delta];
b = [ b_1; b_2; b_zp1; b_zp2; b_zm1; b_zm2; b_delta ];
% lb and ub (lb <= x <= ub)
% H bounding -> controllable loads
%%1 carico
lb_x = xmin;
ub_x = xmax;
%%2 carico
lb_x1 = xmin1;
ub_x1 = xmax1;
% H bounding -> storage
lb_z = [ -inf(H,1); -inf(H,1) ];
ub_z = [ inf(H,1) ; inf(H,1) ];
% H bounding -> delta tra 0 e 1 prima delta+ poi delta -
lb_d = [zeros(H,1) ; zeros(H,1)];
ub_d = [ones(H,1) ; ones(H,1)];
lb = [ lb_x ;lb_x1; lb_z; lb_d ];
ub = [ ub_x ;ub_x1; ub_z; ub_d ];
% Create OPTI Object
Opt = opti('qp',Q,f,'ineq',A,b,'eq',Aeq,beq,'lb',lb,'ub',ub,'xtype',xtype);

% Solve the MIQP problem
[xval,fval,exitflag,info] = solve(Opt)

% time slots

bp(j+1,:) = bb(1);
rs(j+1,:) = r(1);
% extract x

x(j+1,:) = xval(1);


% extract x
x1(j+1,:) = xval(H+1);
% extract z+ e z-
z(j+1,:) = xval(2*H+1)+xval(3*H+1);
z_p = zeros(H,1); z_m = zeros(H,1);
for i = 1:H
    if z(i) > 0 
        z_p(i) = z(i) ;
    elseif z(i) < 0
        z_m(i) = z(i) ;
    end
end
end

xtot = x + x1;
% orizzonte temporale
t=1:144;
% figure plot

bar_width = 1;
h1 = figure(1);
hold on;
hstop = bar( t, z_p+xtot+bp, bar_width, 'FaceColor','c','EdgeColor','k' ) ;
hsl   = bar( t, xtot+bp, bar_width, 'FaceColor','y','EdgeColor','k'  ) ;
hnsl  = bar( t, bp, bar_width, 'FaceColor','g','EdgeColor','k'  ) ;
hstom = bar( t, z_m-rs, bar_width, 'FaceColor','c','EdgeColor','k' ) ;
hres  = bar( t, -rs, bar_width, 'FaceColor','r','EdgeColor','k') ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of consumption / production /'; ...
    'storage activities in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [ hnsl hsl hstop hres ], 'non-controllable loads',...
    'controllable loads','storage','renewable energy','Location','SouthEast' ) ;
V = axis;
xmin = 0.5;  xmax = H+0.5;  
axis( [ xmin xmax V(3) V(4) ] ) ;


h2 = figure(2);
hold on;
hres  = bar( t, -rs, bar_width, 'FaceColor','r','EdgeColor','k' ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of production '; 'in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [ hres ], 'renewable energy','Location','SouthEast' ) ;
axis( [ xmin xmax V(3) V(4) ] ) ;


h3 = figure(3);
hold on;
hnsl  = bar( t, bp, bar_width, 'FaceColor','g','EdgeColor','k'  ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of consumption '; 'in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [ hnsl ], 'non-controllable loads','Location','SouthEast' ) ;
axis( [ xmin xmax V(3) V(4) ] ) ;


h4 = figure(4);
hold on;
hsl  = bar( t, x, bar_width, 'FaceColor','y','EdgeColor','k'  ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of consumption carico 1 '; 'in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [ hsl ], 'controllable loads','Location','SouthEast' ) ;
axis( [ xmin xmax V(3) V(4) ] ) ;

h4 = figure(7);
hold on;
hsl  = bar( t, x1, bar_width, 'FaceColor','y','EdgeColor','k'  ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of consumption carico 2 '; 'in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [ hsl ], 'controllable loads','Location','SouthEast' ) ;
axis( [ xmin xmax V(3) V(4) ] ) ;


h5 = figure(5);
hold on;
hstop = bar( t, z_p, bar_width, 'FaceColor','c','EdgeColor','k' ) ;
hstom = bar( t, z_m, bar_width, 'FaceColor','c','EdgeColor','k' ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile of'; 'storage activities in the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [  hstop ], 'storage','Location','SouthEast' ) ;
xmin = 0.5;  xmax = H+0.5;  
axis( [ xmin xmax V(3) V(4) ] ) ;


h6 = figure(6);
hold on;
hgrid = bar( t, z_p+xtot+bp-rs+z_m, bar_width, 'FaceColor','w','EdgeColor','k' ) ;
xlabel( 'time slot', 'FontSize',12.5 ) ;
ylabel( {'energy profile'; 'bought from grid by the smart home [KWh]'}, 'FontSize',12.5 ) ;
legend( [  hgrid ], 'energy bought from grid','Location','SouthEast' ) ;
axis( [ xmin xmax V(3) V(4) ] ) ;


%--------------------------------------------------------------------------                  
